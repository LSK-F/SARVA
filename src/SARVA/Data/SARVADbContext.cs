// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using SARVA.Models;

namespace SARVA.Data;

public partial class SARVADbContext : DbContext
{
    public SARVADbContext(DbContextOptions<SARVADbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Ciclo> Ciclos { get; set; }

    public virtual DbSet<Cliente> Clientes { get; set; }

    public virtual DbSet<Empresa> Empresas { get; set; }

    public virtual DbSet<Item_Pedido> Item_Pedido { get; set; }

    public virtual DbSet<Item_Venda> Item_Venda { get; set; }

    public virtual DbSet<Pedido> Pedidos { get; set; }

    public virtual DbSet<Produto> Produtos { get; set; }

    public virtual DbSet<Score> Scores { get; set; }

    public virtual DbSet<Venda> Venda { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Ciclo>(entity =>
        {
            entity.ToTable("Ciclo");

            entity.Property(e => e.dataFim).HasColumnType("date");
            entity.Property(e => e.dataInicio).HasColumnType("date");
            entity.Property(e => e.id_usuario)
                .IsRequired()
                .HasMaxLength(450);
            entity.Property(e => e.nome)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.Empresa).WithMany(p => p.Ciclos)
                .HasForeignKey(d => d.id_empresa)
                .HasConstraintName("FK_Ciclo_Empresa");
        });

        modelBuilder.Entity<Cliente>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__Cliente__3213E83FE753010F");

            entity.ToTable("Cliente");

            entity.Property(e => e.aniversario).HasColumnType("date");
            entity.Property(e => e.email)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.id_usuario)
                .IsRequired()
                .HasMaxLength(450);
            entity.Property(e => e.nome)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.score).WithMany(p => p.Clientes)
                .HasForeignKey(d => d.scoreId)
                .HasConstraintName("FK_Cliente_Score");
        });

        modelBuilder.Entity<Empresa>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__Empresa__3213E83F88A4D44A");

            entity.ToTable("Empresa");

            entity.Property(e => e.id_usuario)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.razao_social)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Item_Pedido>(entity =>
        {
            entity.HasKey(e => new { e.codigo_IV, e.id_ciclo_IV, e.id_venda_IV, e.id_pedido }).HasName("PK_Item_Pedido_1");

            entity.ToTable("Item_Pedido");

            entity.Property(e => e.valor).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.Pedido).WithMany(p => p.Item_Pedido)
                .HasForeignKey(d => d.id_pedido)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Item_Pedido_Pedido2");

            entity.HasOne(d => d.Item_Venda).WithMany(p => p.Item_Pedido)
                .HasForeignKey(d => new { d.codigo_IV, d.id_ciclo_IV, d.id_venda_IV })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Item_Pedido_Item_Venda");
        });

        modelBuilder.Entity<Item_Venda>(entity =>
        {
            entity.HasKey(e => new { e.codigo_produto, e.id_ciclo_produto, e.id_venda });

            entity.Property(e => e.data_validade).HasColumnType("date");
            entity.Property(e => e.valor).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.Venda).WithMany(p => p.Item_Venda)
                .HasForeignKey(d => d.id_venda)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Item_Vend__id_ve__38996AB5");

            entity.HasOne(d => d.Produto).WithMany(p => p.Item_Venda)
                .HasForeignKey(d => new { d.id_ciclo_produto, d.codigo_produto })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Item_Venda_Produto1");
        });

        modelBuilder.Entity<Pedido>(entity =>
        {
            entity.ToTable("Pedido");

            entity.Property(e => e.data_pedido).HasColumnType("date");
            entity.Property(e => e.data_vencimento).HasColumnType("date");
            entity.Property(e => e.id_usuario)
                .IsRequired()
                .HasMaxLength(450);
            entity.Property(e => e.valor).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.Empresa).WithMany(p => p.Pedidos)
                .HasForeignKey(d => d.id_empresa)
                .HasConstraintName("FK_Pedido_Empresa");
        });

        modelBuilder.Entity<Produto>(entity =>
        {
            entity.HasKey(e => new { e.id_ciclo, e.codigo }).HasName("PK_Produto_1");

            entity.ToTable("Produto");

            entity.Property(e => e.id_usuario)
                .IsRequired()
                .HasMaxLength(450);
            entity.Property(e => e.nome)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.valor).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.Ciclo).WithMany(p => p.Produtos)
                .HasForeignKey(d => d.id_ciclo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Produto_Ciclo1");

            entity.HasOne(d => d.Empresa).WithMany(p => p.Produtos)
                .HasForeignKey(d => d.id_empresa)
                .HasConstraintName("FK__Produto__id_empr__2D27B809");
        });

        modelBuilder.Entity<Score>(entity =>
        {
            entity.ToTable("Score");

            entity.Property(e => e.descricao)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Venda>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__Venda__3213E83FB0F14735");

            entity.Property(e => e.data_pagamento).HasColumnType("date");
            entity.Property(e => e.data_vencimento).HasColumnType("date");
            entity.Property(e => e.data_venda).HasColumnType("date");
            entity.Property(e => e.desconto).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.id_usuario)
                .IsRequired()
                .HasMaxLength(450);
            entity.Property(e => e.valor).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.valorFinal).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.Cliente).WithMany(p => p.Venda)
                .HasForeignKey(d => d.id_cliente)
                .HasConstraintName("FK__Venda__id_client__33D4B598");

            entity.HasOne(d => d.Empresa).WithMany(p => p.Venda)
                .HasForeignKey(d => d.id_empresa)
                .HasConstraintName("FK__Venda__id_empres__34C8D9D1");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}